<script>

// [index.html]

function ExpiredToBe() {
  return {
    currentItems: () => this.items,
    getAlarms: (ourAlarms) => {
      console.log('got our Alarms: ', ourAlarms);
    },

    window.ourExpirations = new ExpiredToBe();


// [index.tsx]

(window as any).reRender(); // DISPLAY: <App />

    ReactDOM.render(
      <App
        ourExpirationItems={(window as any).ourExpirations.currentItems()}
        getAlarms={(window as any).ourExpirations.getAlarms}

setTimeout( () => {
              getPopup();   // DISPLAY: [popup.html]
            }, 100);        // DISPLAY: [popup.js]

    fetchAsync('extensions/chrome/popup.html').then( data => {}

    nowGetScript();


// [popup.js]

function showList() {}

let alarmList = [];

printListHead();
ourState.forEach( item => {
  alarmList.push( requestAlarm(item.id) ); // chrome.alarms.get('x2b-' + itemId, callback) );



function requestAlarm(itemId) {
  return new Promise((resolve, reject) => {
    const getItems = {
      id: itemId,
      whichEvent: 'getAlarms'
    };





Promise.all(alarmList).then((results) => {
  results.forEach( alarm => {
    if (isGood(alarm.alarmObj)) {
      printAlarm(alarm.id);

    } else {

      // Active but no alarm.
